stages:
  - build

variables:
  PYTHON_VERSION: 3.13
  PGADMIN_VERSION: 9.9

.imgjob:
  before_script:
    - echo -n "$CI_REGISTRY_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY_SERVER"
    - export CI_IMAGE="ravermeister/pgadmin4"
    - apk add --update curl && rm -rf /var/cache/apk/*
  script:
    - |
      docker build --pull --no-cache \
        --force-rm --compress \
        --build-arg PGADMIN_VERSION \
        --build-arg PYTHON_VERSION \
        -t "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG" \
        .
      docker tag "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG" "$CI_REGISTRY_IMAGE:$PGADMIN_VERSION"
      docker push "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG"
  image: docker
  services:
    - name: docker:dind
      command: ["--experimental"]
  variables:
    DOCKER_DRIVER: overlay2
  tags:
    - gitlab-org-docker

build-amd64:
  stage: build
  extends: .imgjob
  variables:
    PYTHON_VERSION: 3.13
    PLATFORM: linux/amd64
    CI_TAG: amd64
  only:
    - main
  tags:
    - gitlab-org-docker

build-arm32:
  stage: build
  extends: .imgjob
  variables:
    PYTHON_VERSION: 3.13
    PLATFORM: linux/arm/v7
    CI_TAG: arm32
  only:
    - main
  tags:
    - arm64
    - docker

build-arm64:
  stage: build
  extends: .imgjob
  variables:
    PYTHON_VERSION: 3.13
    PLATFORM: linux/arm64/v8
    CI_TAG: arm64
  only:
    - main
  tags:
    - arm64
    - docker


create-manifest:
  stage: build
  extends: .imgjob
  needs:
    - build-arm64
    - build-amd64
  variables:
    CI_TAG_ARM64: arm64
    CI_TAG_AMD64: amd64
  script:
    - |
      docker manifest create \
        "$CI_REGISTRY_IMAGE:$PGADMIN_VERSION" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_AMD64" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_ARM32" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_ARM64"
      docker manifest create \
        "$CI_REGISTRY_IMAGE:latest" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_AMD64" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_ARM32" \
        "$CI_IMAGE:$PGADMIN_VERSION-$CI_TAG_ARM64"
      docker manifest push "$CI_REGISTRY_IMAGE:$PGADMIN_VERSION"
      docker manifest push "$CI_REGISTRY_IMAGE:latest"
  only:
    - main

###########################

build-develop:
  stage: build
  extends: .imgjob
  script:
    - >
      docker build --pull --no-cache --force-rm --compress --squash
      -t "$CI_IMAGE:$PGADMIN_VERSION" --build-arg PGADMIN_VERSION .
    - docker tag "$CI_IMAGE:$PGADMIN_VERSION" "$CI_REGISTRY_IMAGE:$PGADMIN_VERSION"
    - docker tag "$CI_IMAGE:$PGADMIN_VERSION" "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE:$PGADMIN_VERSION"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - develop

###########################
